{"version":3,"file":"app/main.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAGA;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAKA;AAEA;;;;;;;;;;;;;;AC/BA;AAWA;AAAA;;AACA;AA4BA;AA1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAQA;AAEA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAIA;AAKA;AAQA;AAYA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAMA;AASA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AChJA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;ACXA;AAwBA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAaA;;;AAGA;AACA;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AAKA;AAKA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;ACtEA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://my-app/./webapp/app/app.tsx","webpack://my-app/./webapp/app/config/constants.ts","webpack://my-app/./webapp/app/config/error-middleware.ts","webpack://my-app/./webapp/app/config/logger-middleware.ts","webpack://my-app/./webapp/app/config/notification-middleware.ts","webpack://my-app/./webapp/app/config/store.ts","webpack://my-app/./webapp/app/index.tsx","webpack://my-app/./webapp/app/modules/home/home.tsx","webpack://my-app/./webapp/app/shared/error/error-boundary.tsx","webpack://my-app/./webapp/app/shared/layout/header/header.tsx","webpack://my-app/./webapp/app/shared/reducers/album-management.ts","webpack://my-app/./webapp/app/shared/reducers/index.ts","webpack://my-app/./webapp/app/shared/reducers/reducer.utils.ts","webpack://my-app/./webapp/app/shared/reducers/user-management.ts","webpack://my-app/ignored|/home/cosmin/projects/gphotos/node_modules/postcss/lib|./terminal-highlight","webpack://my-app/ignored|/home/cosmin/projects/gphotos/node_modules/postcss/lib|fs","webpack://my-app/ignored|/home/cosmin/projects/gphotos/node_modules/postcss/lib|path","webpack://my-app/ignored|/home/cosmin/projects/gphotos/node_modules/postcss/lib|source-map-js","webpack://my-app/ignored|/home/cosmin/projects/gphotos/node_modules/postcss/lib|url","webpack://my-app/webpack/bootstrap","webpack://my-app/webpack/runtime/chunk loaded","webpack://my-app/webpack/runtime/compat get default export","webpack://my-app/webpack/runtime/create fake namespace object","webpack://my-app/webpack/runtime/define property getters","webpack://my-app/webpack/runtime/global","webpack://my-app/webpack/runtime/hasOwnProperty shorthand","webpack://my-app/webpack/runtime/make namespace object","webpack://my-app/webpack/runtime/jsonp chunk loading","webpack://my-app/webpack/before-startup","webpack://my-app/webpack/startup","webpack://my-app/webpack/after-startup"],"sourcesContent":["import React from 'react';\nimport Home from './modules/home/home';\nimport Header from './shared/layout/header/header';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport Container from '@mui/material/Container';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nexport const App = () => {\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <div>\n          <Header/>\n          <Container>\n            <Home/>\n          </Container>\n        </div>\n      </ThemeProvider>\n    );\n};\n\nexport default App;\n","export const AUTHORITIES = {\n  ADMIN: 'admin',\n  USER: 'user',\n  EDITOR: 'editor',\n};\n\nexport const messages = {\n  DATA_ERROR_ALERT: 'Internal Error',\n};\n\nexport const apiUrl = 'api/v1';\n\nexport const ALBUM_PERMISSIONS = {\n  READ: 'album.read',\n  WRITE: 'album.write',\n  EDIT: 'album.edit',\n  DELETE: 'album.delete',\n};\n\nconst isoDateFormat = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d*)?$/;\n","const getErrorMessage = errorData => {\n  let message = errorData.message;\n  if (errorData.fieldErrors) {\n    errorData.fieldErrors.forEach(fErr => {\n      message += `\\nfield: ${fErr.field},  Object: ${fErr.objectName}, message: ${fErr.message}\\n`;\n    });\n  }\n  return message;\n};\n\nexport default () => next => action => {\n  /**\n   *\n   * The error middleware serves to log error messages from dispatch\n   * It need not run in production\n   */\n  if (DEVELOPMENT) {\n    const { error } = action;\n    if (error) {\n      console.error(`${action.type} caught at middleware with reason: ${JSON.stringify(error.message)}.`);\n      if (error.response && error.response.data) {\n        const message = getErrorMessage(error.response.data);\n        console.error(`Actual cause: ${message}`);\n      }\n    }\n  }\n  // Dispatch initial action\n  return next(action);\n};\n","/* eslint no-console: off */\nexport default () => next => action => {\n  if (DEVELOPMENT) {\n    const { type, payload, meta, error } = action;\n\n    console.groupCollapsed(type);\n    console.log('Payload:', payload);\n    if (error) {\n      console.log('Error:', error);\n    }\n    console.log('Meta:', meta);\n    console.groupEnd();\n  }\n\n  return next(action);\n};\n","import { translate } from 'react-jhipster';\nimport { toast } from 'react-toastify';\nimport { isFulfilledAction, isRejectedAction } from 'app/shared/reducers/reducer.utils';\n\nconst addErrorAlert = (message, key?, data?) => {\n  key = key ? key : message;\n  toast.error(translate(key, data));\n};\n\nexport default () => next => action => {\n  const { error, payload } = action;\n\n  /**\n   *\n   * The notification middleware serves to add success and error notifications\n   */\n  if (isFulfilledAction(action) && payload && payload.headers) {\n    const headers = payload?.headers;\n    let alert: string | null = null;\n    let alertParams: string | null = null;\n    headers &&\n      Object.entries<string>(headers).forEach(([k, v]) => {\n        if (k.toLowerCase().endsWith('app-alert')) {\n          alert = v;\n        } else if (k.toLowerCase().endsWith('app-params')) {\n          alertParams = decodeURIComponent(v.replace(/\\+/g, ' '));\n        }\n      });\n    if (alert) {\n      const alertParam = alertParams;\n      toast.success(translate(alert, { param: alertParam }));\n    }\n  }\n\n  if (isRejectedAction(action) && error && error.isAxiosError) {\n    if (error.response) {\n      const response = error.response;\n      const data = response.data;\n      switch (response.status) {\n        // connection refused, server not reachable\n        case 0:\n          addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          let errorHeader: string | null = null;\n          let entityKey: string | null = null;\n          response?.headers &&\n            Object.entries<string>(response.headers).forEach(([k, v]) => {\n              if (k.toLowerCase().endsWith('app-error')) {\n                errorHeader = v;\n              } else if (k.toLowerCase().endsWith('app-params')) {\n                entityKey = v;\n              }\n            });\n          if (errorHeader) {\n            addErrorAlert(errorHeader, errorHeader, { entityKey });\n          } else if (data?.fieldErrors) {\n            const fieldErrors = data.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = \"${fieldError.objectName}.${convertedField}\";\n              addErrorAlert(`Error on field \"${convertedField}\"`, `error.${fieldError.message}`, { fieldName });\n            }\n          } else if (typeof data === 'string' && data !== '') {\n            addErrorAlert(data);\n          } else {\n            toast.error(data?.message || data?.error || data?.title || 'Unknown error!');\n          }\n          break;\n        }\n        case 404:\n          addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (typeof data === 'string' && data !== '') {\n            addErrorAlert(data);\n          } else {\n            toast.error(data?.message || data?.error || data?.title || 'Unknown error!');\n          }\n      }\n    }\n  } else if (error) {\n    toast.error(error.message || 'Unknown error!');\n  }\n\n  return next(action);\n};\n","import { AnyAction, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport reducer from 'app/shared/reducers';\nimport errorMiddleware from './error-middleware';\nimport notificationMiddleware from './notification-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\n\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these field paths in all actions\n        ignoredActionPaths: ['payload.config', 'payload.request', 'error', 'meta.arg'],\n      },\n    }).concat(errorMiddleware, notificationMiddleware, loadingBarMiddleware(), loggerMiddleware),\n});\n\nconst getStore = () => store;\n\nexport type IRootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<IRootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, IRootState, unknown, AnyAction>;\n\nexport default getStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorBoundary from './shared/error/error-boundary';\nimport AppComponent from './app';\nimport getStore from './config/store';\nimport { Provider } from 'react-redux';\n\nconst store = getStore();\n\nconst rootEl = document.getElementById('root');\n\nconst render = Component =>\n  // eslint-disable-next-line react/no-render-return-value\n  ReactDOM.render(\n    <ErrorBoundary>\n      <Provider store={store}>\n        <div>\n          <Component />\n        </div>\n      </Provider>\n    </ErrorBoundary>,\n    rootEl\n  );\n\nrender(AppComponent);\n","import { useAppDispatch, useAppSelector } from 'app/config/store';\nimport { IAlbum } from 'app/shared/models/album.model';\nimport { getAlbums } from 'app/shared/reducers/album-management';\nimport React, {useEffect} from 'react';\n\nexport const Home = () => {\n  const dispatch = useAppDispatch();\n  const albumState = useAppSelector(state => state.albumManagement);\n\n  useEffect(() => {\n    dispatch(getAlbums());\n  }, []);\n\n  return (\n    <div>\n      {albumState.loading \n        ? (<div>Loading</div>)\n        : null\n      }\n      <ul>\n        {albumState.albums && !albumState.loading\n          ? albumState.albums.map((album: IAlbum, index) => (\n            <li key={index}>{album.name}</li>\n          ))\n          : null\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n  error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (errorInfo) {\n      const errorDetails = DEVELOPMENT ? (\n        <details className=\"preserve-space\">\n          {error && error.toString()}\n          <br />\n          {errorInfo.componentStack}\n        </details>\n      ) : undefined;\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { useAppDispatch, useAppSelector } from 'app/config/store';\nimport { getAccount } from 'app/shared/reducers/user-management';\nimport React, { useEffect } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport HomeIcon from '@mui/icons-material/Home';\n\n const pages = ['Create album', 'Tags'];\n const settings = ['Logout'];\n\nconst Header = () => {\n  const dispatch = useAppDispatch();\n\n  const account = useAppSelector(state => state.userManagement.account);\n\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n   const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  useEffect(() => {\n    dispatch(getAccount());\n  },[]);\n\n  return (\n    <AppBar position=\"sticky\" enableColorOnDark color='secondary'>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <HomeIcon sx={{px: \"0.1rem\"}}/>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"S\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n\nexport default Header;\n","import axios from 'axios';\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiUrl } from \"app/config/constants\";\nimport { IAlbum } from \"../models/album.model\";\n\nconst DEFAULT_PAGE_SIZE = 20;\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  albums: [] as ReadonlyArray<IAlbum>,\n  count: 0,\n  offset: 0,\n  limit: DEFAULT_PAGE_SIZE,\n};\n\ninterface internalIAlbum {\n  albums: IAlbum[];\n  count: number;\n}\n\nexport const getAlbums = createAsyncThunk('albumManagement/fetch_albums', async (offset, limit) => {\n  const requestUrl = `${apiUrl}/albums?offset=${offset}&limit=${limit}`;\n  return axios.get<internalIAlbum>(requestUrl);\n});\n\nexport type AlbumManagementState = Readonly<typeof initialState>;\n\nexport const AlbumManagementSlice = createSlice({\n  name: 'albumManagement',\n  initialState: initialState as AlbumManagementState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n  },\n  extraReducers(builder) {\n    builder\n    .addCase(getAlbums.pending, state => {\n      state.loading = true;\n    })\n    .addCase(getAlbums.rejected, (state, action) => ({\n      ...state,\n      loading: false,\n      errorMessage: action.error.message,\n    }))\n    .addCase(getAlbums.fulfilled, (state, action) => {\n      const d = action.payload.data;\n      return {\n        ...state,\n        loading: false,\n        albums: d.albums,\n        count: d.count,\n      }\n    });\n  },\n});\n\nexport const { reset } = AlbumManagementSlice.actions;\n\nexport default AlbumManagementSlice.reducer;\n","import { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\n\nimport userManagement from './user-management';\nimport albumManagement from './album-management';\n\nconst rootReducer = {\n  userManagement,\n  albumManagement,\n  loadingBar,\n};\n\nexport default rootReducer;\n","import {\n  AnyAction,\n  AsyncThunk,\n  ActionReducerMapBuilder,\n  createSlice,\n  SerializedError,\n  SliceCaseReducers,\n  ValidateSliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { AxiosError } from 'axios';\n\n/**\n * Model for redux actions with pagination\n */\nexport type IQueryParams = { query?: string; page?: number; size?: number; sort?: string };\n\n/**\n * Useful types for working with actions\n */\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\nexport type PendingAction = ReturnType<GenericAsyncThunk['pending']>;\nexport type RejectedAction = ReturnType<GenericAsyncThunk['rejected']>;\nexport type FulfilledAction = ReturnType<GenericAsyncThunk['fulfilled']>;\n\n/**\n * Check if the async action type is rejected\n */\nexport function isRejectedAction(action: AnyAction) {\n  return action.type.endsWith('/rejected');\n}\n\n/**\n * Check if the async action type is pending\n */\nexport function isPendingAction(action: AnyAction) {\n  return action.type.endsWith('/pending');\n}\n\n/**\n * Check if the async action type is completed\n */\nexport function isFulfilledAction(action: AnyAction) {\n  return action.type.endsWith('/fulfilled');\n}\n\nconst commonErrorProperties: Array<keyof SerializedError> = ['name', 'message', 'stack', 'code'];\n\n/**\n * serialize function used for async action errors,\n * since the default function from Redux Toolkit strips useful info from axios errors\n */\nexport const serializeAxiosError = (value: any): AxiosError | SerializedError => {\n  if (typeof value === 'object' && value !== null) {\n    if (value.isAxiosError) {\n      return value;\n    } else {\n      const simpleError: SerializedError = {};\n      for (const property of commonErrorProperties) {\n        if (typeof value[property] === 'string') {\n          simpleError[property] = value[property];\n        }\n      }\n\n      return simpleError;\n    }\n  }\n  return { message: String(value) };\n};\n\nexport interface EntityState<T> {\n  loading: boolean;\n  errorMessage: string | null;\n  entities: ReadonlyArray<T>;\n  entity: T;\n  links?: any;\n  updating: boolean;\n  totalItems?: number;\n  updateSuccess: boolean;\n}\n\n/**\n * A wrapper on top of createSlice from Redux Toolkit to extract\n * common reducers and matchers used by entities\n */\nexport const createEntitySlice = <T, Reducers extends SliceCaseReducers<EntityState<T>>>({\n  name = '',\n  initialState,\n  reducers,\n  extraReducers,\n  skipRejectionHandling,\n}: {\n  name: string;\n  initialState: EntityState<T>;\n  reducers?: ValidateSliceCaseReducers<EntityState<T>, Reducers>;\n  extraReducers?: (builder: ActionReducerMapBuilder<EntityState<T>>) => void;\n  skipRejectionHandling?: boolean;\n}) => {\n  return createSlice({\n    name,\n    initialState,\n    reducers: {\n      /**\n       * Reset the entity state to initial state\n       */\n      reset() {\n        return initialState;\n      },\n      ...reducers,\n    },\n    extraReducers(builder) {\n      extraReducers(builder);\n      /*\n       * Common rejection logic is handled here.\n       * If you want to add your own rejcetion logic, pass `skipRejectionHandling: true`\n       * while calling `createEntitySlice`\n       * */\n      if (!skipRejectionHandling) {\n        builder.addMatcher(isRejectedAction, (state, action) => {\n          state.loading = false;\n          state.updating = false;\n          state.updateSuccess = false;\n          state.errorMessage = action.error.message;\n        });\n      }\n    },\n  });\n};\n","import axios from 'axios';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { serializeAxiosError } from './reducer.utils';\nimport { apiUrl } from 'app/config/constants';\n\nimport { IUser } from 'app/shared/models/user.model';\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  users: [] as ReadonlyArray<IUser>,\n  account: {} as Readonly<IUser>,\n};\n\n\n// Async Actions\nexport const getUsers = createAsyncThunk('userManagement/fetch_users', async () => {\n  const requestUrl = `${apiUrl}/users`;\n  return axios.get<IUser[]>(requestUrl);\n});\n\nexport const getAccount = createAsyncThunk('authentication/get_account', async () => {\n  return axios.get<IUser>(`${apiUrl}/account`);\n});\n\n\nexport type UserManagementState = Readonly<typeof initialState>;\n\nexport const UserManagementSlice = createSlice({\n  name: 'userManagement',\n  initialState: initialState as UserManagementState,\n  reducers: {\n    reset() {\n      return initialState;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(getUsers.pending, state => {\n        state.loading = true;\n      })\n      .addCase(getUsers.rejected, (state, action) => ({\n        ...state,\n        loading: false,\n        errorMessage: action.error.message,\n      }))\n      .addCase(getUsers.fulfilled, (state, action) => ({\n        ...state,\n        loading: false,\n        users: action.payload.data,\n      }))\n      .addCase(getAccount.pending, state => {\n        state.loading = true;\n      })\n      .addCase(getAccount.rejected, (state, action) => ({\n        ...state,\n        loading: false,\n        errorMessage: action.error.message,\n      }))\n      .addCase(getAccount.fulfilled, (state, action) => ({\n        ...state,\n        loading: false,\n        account: action.payload.data,\n      }));\n  },\n});\n\nexport const { reset } = UserManagementSlice.actions;\n\n// Reducer\nexport default UserManagementSlice.reducer;\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_app\"] = self[\"webpackChunkmy_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], function() { return __webpack_require__(\"./webapp/app/index.tsx\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}
// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package v1

// Album defines model for Album.
type Album struct {
	// path of the bucket where media is stored
	Bucket string `json:"bucket"`

	// creation date in unix timestamp
	CreatedAt int64 `json:"created_at"`

	// description of the album
	Description *string `json:"description,omitempty"`
	Href        string  `json:"href"`
	Id          string  `json:"id"`
	Kind        string  `json:"kind"`

	// location of the album
	Location *string `json:"location,omitempty"`

	// name of the album
	Name string `json:"name"`
	Tags *[]Tag `json:"tags,omitempty"`

	// url of the thumbnail of the album
	Thumbnail *string `json:"thumbnail,omitempty"`
}

// AlbumPermissions defines model for AlbumPermissions.
type AlbumPermissions struct {
	Groups *[]GroupPermissions `json:"groups,omitempty"`
	Users  *[]UserPermissions  `json:"users,omitempty"`
}

// Albums defines model for Albums.
type Albums struct {
	Albums *[]UserAlbum `json:"albums,omitempty"`

	// number of the page
	Page *int32 `json:"page,omitempty"`

	// number of album in a page
	Size  *int32 `json:"size,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// GroupPermissions defines model for GroupPermissions.
type GroupPermissions struct {
	Group       ObjectReference `json:"group"`
	Permissions []string        `json:"permissions"`
}

// ObjectReference defines model for ObjectReference.
type ObjectReference struct {
	Href string `json:"href"`
	Id   string `json:"id"`
	Kind string `json:"kind"`
}

// Tag defines model for Tag.
type Tag struct {
	// color of the tag in hex format
	Color *string `json:"color,omitempty"`
	Href  string  `json:"href"`
	Id    string  `json:"id"`
	Kind  string  `json:"kind"`

	// name of the tag
	Name string `json:"name"`

	// tag's owner id
	UserId string `json:"user_id"`
}

// User defines model for User.
type User struct {
	Groups *[]ObjectReference `json:"groups,omitempty"`
	Href   string             `json:"href"`
	Id     string             `json:"id"`
	Kind   string             `json:"kind"`

	// name of the user
	Name *string `json:"name,omitempty"`

	// surname of the user
	Surname *string `json:"surname,omitempty"`

	// user_od
	UserId *string `json:"user_id,omitempty"`
}

// UserAlbum defines model for UserAlbum.
type UserAlbum struct {
	// path of the bucket where media is stored
	Bucket string `json:"bucket"`

	// creation date in unix timestamp
	CreatedAt int64 `json:"created_at"`

	// description of the album
	Description *string `json:"description,omitempty"`
	Href        string  `json:"href"`
	Id          string  `json:"id"`
	Kind        string  `json:"kind"`

	// location of the album
	Location *string `json:"location,omitempty"`

	// name of the album
	Name  string `json:"name"`
	Owner *User  `json:"owner,omitempty"`
	Tags  *[]Tag `json:"tags,omitempty"`

	// url of the thumbnail of the album
	Thumbnail *string `json:"thumbnail,omitempty"`
}

// UserAlbums defines model for UserAlbums.
type UserAlbums struct {
	Albums *[]Album `json:"albums,omitempty"`

	// number of the page
	Page *int32 `json:"page,omitempty"`

	// number of album in a page
	Size  *int32 `json:"size,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// UserPermissions defines model for UserPermissions.
type UserPermissions struct {
	Permissions []string `json:"permissions"`
	User        User     `json:"user"`
}

// VersionMetadata defines model for VersionMetadata.
type VersionMetadata struct {
	Collections *[]struct {
		Href string `json:"href"`
		Id   string `json:"id"`
		Kind string `json:"kind"`
	} `json:"collections,omitempty"`
	Href string `json:"href"`
	Id   string `json:"id"`
	Kind string `json:"kind"`
}

// GetAlbumsParams defines parameters for GetAlbums.
type GetAlbumsParams struct {
	// session cookie
	Cookie *string `json:"cookie,omitempty"`
}

// GetAlbumsByGroupParams defines parameters for GetAlbumsByGroup.
type GetAlbumsByGroupParams struct {
	// session cookie
	Cookie *string `json:"cookie,omitempty"`
}

// GetAlbumsByUserParams defines parameters for GetAlbumsByUser.
type GetAlbumsByUserParams struct {
	// session cookie
	Cookie *string `json:"cookie,omitempty"`
}

// GetAlbumPermissionsParams defines parameters for GetAlbumPermissions.
type GetAlbumPermissionsParams struct {
	// session cookie
	Cookie *string `json:"cookie,omitempty"`
}

// GetApiGphotosV1AuthCallbackParams defines parameters for GetApiGphotosV1AuthCallback.
type GetApiGphotosV1AuthCallbackParams struct {
	// oidc token
	Code *string `form:"code,omitempty" json:"code,omitempty"`

	// oidc inital state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

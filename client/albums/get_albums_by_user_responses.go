// Code generated by go-swagger; DO NOT EDIT.

package albums

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tupyy/gophoto/models"
)

// GetAlbumsByUserReader is a Reader for the GetAlbumsByUser structure.
type GetAlbumsByUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlbumsByUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlbumsByUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlbumsByUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlbumsByUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAlbumsByUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAlbumsByUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAlbumsByUserOK creates a GetAlbumsByUserOK with default headers values
func NewGetAlbumsByUserOK() *GetAlbumsByUserOK {
	return &GetAlbumsByUserOK{}
}

/* GetAlbumsByUserOK describes a response with status code 200, with default header values.

list of album shard by 'user_id' with logged user
*/
type GetAlbumsByUserOK struct {
	Payload *models.UserAlbums
}

// IsSuccess returns true when this get albums by user o k response has a 2xx status code
func (o *GetAlbumsByUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get albums by user o k response has a 3xx status code
func (o *GetAlbumsByUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get albums by user o k response has a 4xx status code
func (o *GetAlbumsByUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get albums by user o k response has a 5xx status code
func (o *GetAlbumsByUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get albums by user o k response a status code equal to that given
func (o *GetAlbumsByUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAlbumsByUserOK) Error() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserOK  %+v", 200, o.Payload)
}

func (o *GetAlbumsByUserOK) String() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserOK  %+v", 200, o.Payload)
}

func (o *GetAlbumsByUserOK) GetPayload() *models.UserAlbums {
	return o.Payload
}

func (o *GetAlbumsByUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserAlbums)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlbumsByUserUnauthorized creates a GetAlbumsByUserUnauthorized with default headers values
func NewGetAlbumsByUserUnauthorized() *GetAlbumsByUserUnauthorized {
	return &GetAlbumsByUserUnauthorized{}
}

/* GetAlbumsByUserUnauthorized describes a response with status code 401, with default header values.

Not authenticated.
*/
type GetAlbumsByUserUnauthorized struct {
}

// IsSuccess returns true when this get albums by user unauthorized response has a 2xx status code
func (o *GetAlbumsByUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get albums by user unauthorized response has a 3xx status code
func (o *GetAlbumsByUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get albums by user unauthorized response has a 4xx status code
func (o *GetAlbumsByUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get albums by user unauthorized response has a 5xx status code
func (o *GetAlbumsByUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get albums by user unauthorized response a status code equal to that given
func (o *GetAlbumsByUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAlbumsByUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserUnauthorized ", 401)
}

func (o *GetAlbumsByUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserUnauthorized ", 401)
}

func (o *GetAlbumsByUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlbumsByUserForbidden creates a GetAlbumsByUserForbidden with default headers values
func NewGetAlbumsByUserForbidden() *GetAlbumsByUserForbidden {
	return &GetAlbumsByUserForbidden{}
}

/* GetAlbumsByUserForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type GetAlbumsByUserForbidden struct {
}

// IsSuccess returns true when this get albums by user forbidden response has a 2xx status code
func (o *GetAlbumsByUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get albums by user forbidden response has a 3xx status code
func (o *GetAlbumsByUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get albums by user forbidden response has a 4xx status code
func (o *GetAlbumsByUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get albums by user forbidden response has a 5xx status code
func (o *GetAlbumsByUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get albums by user forbidden response a status code equal to that given
func (o *GetAlbumsByUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAlbumsByUserForbidden) Error() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserForbidden ", 403)
}

func (o *GetAlbumsByUserForbidden) String() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserForbidden ", 403)
}

func (o *GetAlbumsByUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlbumsByUserInternalServerError creates a GetAlbumsByUserInternalServerError with default headers values
func NewGetAlbumsByUserInternalServerError() *GetAlbumsByUserInternalServerError {
	return &GetAlbumsByUserInternalServerError{}
}

/* GetAlbumsByUserInternalServerError describes a response with status code 500, with default header values.

Internal error.
*/
type GetAlbumsByUserInternalServerError struct {
}

// IsSuccess returns true when this get albums by user internal server error response has a 2xx status code
func (o *GetAlbumsByUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get albums by user internal server error response has a 3xx status code
func (o *GetAlbumsByUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get albums by user internal server error response has a 4xx status code
func (o *GetAlbumsByUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get albums by user internal server error response has a 5xx status code
func (o *GetAlbumsByUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get albums by user internal server error response a status code equal to that given
func (o *GetAlbumsByUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAlbumsByUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserInternalServerError ", 500)
}

func (o *GetAlbumsByUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserInternalServerError ", 500)
}

func (o *GetAlbumsByUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlbumsByUserServiceUnavailable creates a GetAlbumsByUserServiceUnavailable with default headers values
func NewGetAlbumsByUserServiceUnavailable() *GetAlbumsByUserServiceUnavailable {
	return &GetAlbumsByUserServiceUnavailable{}
}

/* GetAlbumsByUserServiceUnavailable describes a response with status code 503, with default header values.

Not available.
*/
type GetAlbumsByUserServiceUnavailable struct {
}

// IsSuccess returns true when this get albums by user service unavailable response has a 2xx status code
func (o *GetAlbumsByUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get albums by user service unavailable response has a 3xx status code
func (o *GetAlbumsByUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get albums by user service unavailable response has a 4xx status code
func (o *GetAlbumsByUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get albums by user service unavailable response has a 5xx status code
func (o *GetAlbumsByUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get albums by user service unavailable response a status code equal to that given
func (o *GetAlbumsByUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetAlbumsByUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserServiceUnavailable ", 503)
}

func (o *GetAlbumsByUserServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /api/gphotos/v1/albums/users/{user_id}][%d] getAlbumsByUserServiceUnavailable ", 503)
}

func (o *GetAlbumsByUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

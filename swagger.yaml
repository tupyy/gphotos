swagger: '2.0'

info:
  title: gphotos
  description: This API is dedicated to device management.
  version: '#VERSION#'

schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /api/gphotos/v1:
    get:
      operationId: getVersionMetadata
      description: get inforamtion about available versions
      responses:
        200:
          description: version metadata
          schema:
            $ref: '#/definitions/VersionMetadata'
        401:
          description: Not authenticated
        500:
          description: unexpected error occured
  /api/gphotos/v1/albums:
    get:
      operationId: getAlbums
      description: get all albums owned by or shared with the current logged user
      tags:
        - Albums
      responses:
        200:
          description: list of albums that can be accessed by the logged user
          schema:
            $ref: '#/definitions/Albums'
        401:
          description: Not authenticated.
        403:
          description: Forbidden.
        500:
          description: Internal error.
        503:
          description: Not available.
  /api/gphotos/v1/albums/users/{user_id}:
    get:
      operationId: getAlbumsByUser
      description: get all user's album with the logged user can access
      tags:
        - Albums
      parameters:
        - in: path
          name: user_id
          type: string
          description: id of the album's owner
          required: true
      responses:
        200:
          description: list of album shard by 'user_id' with logged user
          schema:
            $ref: '#/definitions/UserAlbums'
        401:
          description: Not authenticated.
        403:
          description: Forbidden.
        500:
          description: Internal error.
        503:
          description: Not available.
  /api/gphotos/v1/albums/{album_id}:
    get:
      operationId: getAlbumsByID
      description: get album by id
      tags:
        - Albums
      parameters:
        - in: path
          name: album_id
          type: string
          description: id of the album's owner
          required: true
      responses:
        200:
          description: return album
          schema:
            $ref: '#/definitions/UserAlbum'
        401:
          description: Not authenticated.
        403:
          description: Forbidden.
        500:
          description: Internal error.
        503:
          description: Not available.

definitions:
  ObjectReference:
    type: object
    properties:
      id:
        type: string
      kind:
        type: string
      href:
        type: string
    required:
      - id
      - kind
      - href
  VersionMetadata:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          collections:
            type: array
            items:
              allOf:
                - $ref: '#/definitions/ObjectReference'
  UserPermissions:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      permissions:
        type: array
        items:
          type: string
    required:
      - user
      - permissions
  GroupPermissions:
    type: object
    properties:
      group:
        $ref: '#/definitions/ObjectReference'
      permissions:
        type: array
        items:
          type: string
    required:
      - group
      - permissions
  Tag:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          user_id:
            type: string
            description: tag's owner id
          name:
            type: string
            description: name of the tag
          color:
            type: string
            description: color of the tag in hex format
          albums:
            type: array
            items:
              allOf:
                - $ref: '#/definitions/ObjectReference'
        required:
          - user_id
          - name
          - albums
  Tags:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          tags:
            type: array
            items:
              $ref: '#/definitions/Tag'
          page:
            type: integer
            format: int32
            description: number of the page
          size:
            type: integer
            format: int32
            description: number of album in a page
          total:
            type: integer
            format: int32
  Photo:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          filename:
              type: string
              description: name of the file
          bucket:
              type: string
              description: bucket where the photo is stored
          thumbnail:
              type: string
              description: path to the thumbnail of the photo
  Photos:
    type: array
    items:
      $ref: '#/definitions/Photo'
  Album:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          name:
            type: string
            description: name of the album
          created_at:
            type: integer
            format: int64
            description: creation date in unix timestamp
          description:
            type: string
            description: description of the album
          location:
            type: string
            description: location of the album
          bucket:
            type: string
            description: path of the bucket where media is stored
          thumbnail:
            type: string
            description: url of the thumbnail of the album
          user_permissions:
            $ref: '#/definitions/UserPermissions'
          group_permissions:
            $ref: '#/definitions/GroupPermissions'
          tags:
            type: array
            items:
              $ref: '#/definitions/Tag'
        required:
          - name
          - created_at
          - bucket
  UserAlbum:
    allOf:
      - $ref: '#/definitions/Album'
      - type: object
        properties:
          owner:
            $ref: '#/definitions/User'
  Albums:
    type: object
    properties:
      albums:
        type: array
        items:
          $ref: '#/definitions/UserAlbum'
      page:
        type: integer
        format: int32
        description: number of the page
      size:
        type: integer
        format: int32
        description: number of album in a page
      total:
        type: integer
        format: int32
  UserAlbums:
    type: object
    properties:
      albums:
        type: array
        items:
          $ref: '#/definitions/Album'
      owner:
        $ref: '#/definitions/User'
      page:
        type: integer
        format: int32
        description: number of the page
      size:
        type: integer
        format: int32
        description: number of album in a page
      total:
        type: integer
        format: int32
  User:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          name:
            type: string
            description: name of the user
          surname:
            type: string
            description: surname of the user
          user_id:
            type: string
            description: user_id
          groups:
            type: array
            items:
              $ref: '#/definitions/ObjectReference'
  Group:
    allOf:
      - $ref: '#/definitions/ObjectReference'
      - type: object
        properties:
          name:
            type: string
            description: name of the group
          members:
            type: array
            items:
              $ref: '#/definitions/ObjectReference'
